openapi: 3.1.0
info:
  title: RealWorld Conduit API
  version: 1.0.0
  description: Conduit API documentation
  contact:
    name: RealWorld
    url: https://realworld.how
  license:
    name: MIT License
    url: https://opensource.org/licenses/MIT
servers:
- url: https://api.realworld.io/api
paths:
  /users/login:
    post:
      tags:
      - User and Authentication
      summary: Existing user login
      description: Login for existing user
      operationId: Login
      requestBody:
        description: Credentials to use
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginUserRequest'
        required: true
      responses:
        '200':
          description: User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '400':
          description: 'Invalid value for: body'
          content:
            text/plain:
              schema:
                type: string
      x-codegen-request-body-name: body
  /users:
    post:
      tags:
      - User and Authentication
      description: Register a new user
      operationId: CreateUser
      requestBody:
        description: Details of the new user to register
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewUserRequest'
        required: true
      responses:
        '200':
          description: User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '400':
          description: 'Invalid value for: body'
          content:
            text/plain:
              schema:
                type: string
      x-codegen-request-body-name: body
  /user:
    get:
      tags:
      - User and Authentication
      summary: Get current user
      description: Gets the currently logged-in user
      operationId: GetCurrentUser
      responses:
        '200':
          description: User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
    put:
      tags:
      - User and Authentication
      summary: Update current user
      description: Updated user information for current user
      operationId: UpdateCurrentUser
      requestBody:
        description: User details to update. At least **one** field is required.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserRequest'
        required: true
      responses:
        '200':
          description: User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '400':
          description: 'Invalid value for: body'
          content:
            text/plain:
              schema:
                type: string
      x-codegen-request-body-name: body
  /profiles/{username}:
    get:
      tags:
      - Profile
      summary: Get a profile
      description: Get a profile of a user of the system. Auth is optional
      operationId: GetProfileByUsername
      parameters:
      - name: username
        in: path
        description: Username of the profile to get
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileResponse'
          required: true
  /profiles/{username}/follow:
    post:
      tags:
      - Profile
      summary: Follow a user
      description: Follow a user by username
      operationId: FollowUserByUsername
      parameters:
      - name: username
        in: path
        description: Username of the profile you want to follow
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileResponse'
          required: true
    delete:
      tags:
      - Profile
      summary: Unfollow a user
      description: Unfollow a user by username
      operationId: UnfollowUserByUsername
      parameters:
      - name: username
        in: path
        description: Username of the profile you want to unfollow
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileResponse'
          required: true
components:
  schemas:
    LoginUser:
      required:
      - email
      - password
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    LoginUserRequest:
      required:
      - user
      type: object
      properties:
        user:
          $ref: '#/components/schemas/LoginUser'
    NewUser:
      required:
      - username
      - email
      - password
      type: object
      properties:
        username:
          type: string
        email:
          type: string
        password:
          type: string
    NewUserRequest:
      required:
      - user
      type: object
      properties:
        user:
          $ref: '#/components/schemas/NewUser'
    Profile:
      required:
      - username
      - bio
      - image
      - following
      type: object
      properties:
        username:
          type: string
        bio:
          type: string
        image:
          type: string
        following:
          type: boolean
    ProfileResponse:
      required:
      - profile
      type: object
      properties:
        profile:
          $ref: '#/components/schemas/Profile'
    UpdateUserRequest:
      required:
      - user
      type: object
      properties:
        user:
          $ref: '#/components/schemas/User'
    User:
      required:
      - email
      - token
      - username
      - bio
      - image
      type: object
      properties:
        email:
          type: string
        token:
          type: string
        username:
          type: string
        bio:
          type: string
        image:
          type: string
    UserResponse:
      required:
      - user
      type: object
      properties:
        user:
          $ref: '#/components/schemas/User'
